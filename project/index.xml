<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Sebastian Brunner</title>
    <link>https://sebastian-brunner.github.io/project/</link>
    <description>Recent content in Projects on Sebastian Brunner</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://sebastian-brunner.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RAFCON</title>
      <link>https://sebastian-brunner.github.io/project/rafcon/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://sebastian-brunner.github.io/project/rafcon/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Robex</title>
      <link>https://sebastian-brunner.github.io/project/robex/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sebastian-brunner.github.io/project/robex/</guid>
      <description>&lt;p&gt;For the Demonstration Mission Space a dedicated scenario was chosen by the ROBEX lunar scientists. The scenario describes the installation of an active seismic network (ASN) on the Moon’s surface. Main focus here is the measurement of the internal structure and the composition of the upper layer, the lunar regolith. Other questions are the existence and composition of a central core of the Moon and if there is any seismic activity. The seismometers are planned to be transported by a rover and put down on surface by means of a robotic arm.&lt;/p&gt;

&lt;p&gt;The analogue mission on the Mt. Etna basically consisted of two individual experiments: First, our rover mapped the lander site, deployed the seismic instrument, waited until one measurement cycle was done, took it up again and repeated the measurement on several points of interest. In the second experiment, the rover had to set up a seismic network consisting of four instruments that had to be arranged at three corner points and the center point of an equilateral triangle of about 100 m. Both scenarios required the robot to be equipped with highly robust navigation, perception and manipulation capabilities in order to place the instruments carefully and precisely onto the ground. Our robot was able to perform these tasks fully autonomously.&lt;/p&gt;

&lt;p&gt;My responsibilities: Autonomous Task Control, System Architecture, Task Execution Logging and Profiling, Semantic World Modeling&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SpacebotCamp</title>
      <link>https://sebastian-brunner.github.io/project/spacebotcamp/</link>
      <pubDate>Sun, 13 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sebastian-brunner.github.io/project/spacebotcamp/</guid>
      <description>&lt;p&gt;In the SpacebotCamp, our mobile robotic system had to explore an unknwon area, find two objects and bring them to a third object for assembly. All tasks had to be done with a high level of autonomy since communication was delayed by 2 seconds and sending commands was limited to only a few occasions. The whole task had to be done in 60 minutes.&lt;/p&gt;

&lt;p&gt;Our team, RMexplores!, was the only team that fulfilled all tasks within the given specification. This was accomplished in halve of the time!&lt;/p&gt;

&lt;p&gt;My responsibilities: Autonomous Task Control, System Architecture&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Robocup</title>
      <link>https://sebastian-brunner.github.io/project/robocup/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sebastian-brunner.github.io/project/robocup/</guid>
      <description>&lt;p&gt;The Logistics League of the Robocup was set up in 2010 as a demonstration league for industrial applications and is sponsored by Festo since then. In 2012 the league got promoted to an approved major league of the RoboCup with continuously growing importance. The Logistics League enables scientific work for solving logistical problems inside a dynamic production environment with multiple self-organizing autonomous mobile robots. The robots are currently based on the robot platform Robotino from Festo, but can be modified individually in terms of hardware. In order to provide a high rate of product deliveries in due time, the teams have to achieve an efficient, precise and flexible material and information flow within the production hall. From 2014 on both competing teams operate within the same production environment at the same time, which also requires dynamic collision avoidance and increased spatial coordination complexity. This league offers an interdisciplinary approach in the fields of Mechatronics, Computer Science and Logistics in order to deal with all the challenges and requirements further described in the Logistics League Rulebook, including dynamic production plans, out-of-order machines, recycling, changing delivery gates and a random machine distribution.&lt;/p&gt;

&lt;p&gt;We the Bavarian Bending Units won the world championship three times in a row in the RoboCup Logistics League at RoboCup 2011 in Istanbul, at RoboCup 2012 in Mexico City, as well as at RoboCup 2013 in Eindhoven, Netherlands. In 2014, at RoboCup 2014 in João Pessoa, Brazil, we became vice world champion in an exciting and attractive final game against the team Carologistics from Aachen.&lt;/p&gt;

&lt;p&gt;My responsibilities: Perception, Navigation, ROS Infrastructure, Robot Communication&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bundle Adjustment</title>
      <link>https://sebastian-brunner.github.io/project/master-thesis/</link>
      <pubDate>Mon, 31 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sebastian-brunner.github.io/project/master-thesis/</guid>
      <description>&lt;p&gt;My master thesis gives a detailed insight into bundle adjustment as a powerful tool for globally optimizing maps created by feature based simultaneous localization and mapping (SLAM). Background knowledge, especially concerning the mathematical theory, is be illustrated clearly. Different problems affecting robustness and efficiency are examined and solutions are given. Therefore a major part focuses on the parallel implementation in OpenCL, a language for parallelizing algorithms for different processor architectures like CPUs, GPUs and FPGAs. The algorithm is tested against different synthetic and real datasets and the results are shown graphically using Point Clouds and the CVT library. In addition, different implementations are compared with each other concerning robustness and performance. It is illustrated that a hybrid OpenCL bundle adjustment implementation, which is using a GPU and a CPU simultaneously, outperforms all other approaches.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NLCT</title>
      <link>https://sebastian-brunner.github.io/project/nlct/</link>
      <pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sebastian-brunner.github.io/project/nlct/</guid>
      <description>&lt;p&gt;NLCT is a lightweight library written in C++ to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;convert the covariance matrices for poses between different representations: Quaternions, Euler Angle (both fixed and moving frames)&lt;/li&gt;
&lt;li&gt;compute the composition of multiple certain and uncertain poses&lt;/li&gt;
&lt;li&gt;transform the covariance of a pose from one coordinate frame into another&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For all functions the user can choose the computation method: UNSCENTED, JACOBIAN, SAMPLING. The computation methods are a trade-off between accuracy and computation speed. The library includes functions for normalization, representation conversion and pose transformation (like composition, inversion etc.).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Semantic World Model</title>
      <link>https://sebastian-brunner.github.io/project/world_model/</link>
      <pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sebastian-brunner.github.io/project/world_model/</guid>
      <description>&lt;p&gt;The world model is implemented using the graph database Neo4j (&lt;a href=&#34;https://neo4j.com/&#34; target=&#34;_blank&#34;&gt;https://neo4j.com/&lt;/a&gt;) as backend.
Neo4j represents data using a property-graph model, meaning the database is a graph composed of nodes and interconnected by edges, both of which can store arbitrary properties in a key-value fashion.
For our world model, we directly represent objects in the world model as nodes in the database graph and correspondingly edges in the graph build up the world model tree structure.
The relative position and orientation between two objects are stored as properties of the connecting edge.
We define and ensure a common type-system for objects in the world, by defining a type-hierarchy with precisely listed required and optional properties for each object type (e.g. every PhysicalObject has to have a mass; every Grasp a width and force).&lt;/p&gt;

&lt;p&gt;A database as backend in general provides useful features to keep the world model consistent at any time, e.g. synchronized multi-client read-/write-access and transaction support for batching multiple modifications into an atomic operation.
In particular, we use transactions with pre-/post-transaction sanity checks to allow complex yet safe operations on the world model. In case of a software error or violated sanity checks (e.g. a world model object suddenly has two parents), the world model is automatically rolled back to the consistent state before this modification.
As a graph database, Neo4j offers a pattern-related query language called CYPHER, which makes it very easy to query the world model for e.g. &amp;ldquo;all rigid bodies for which a grasp is defined.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;We use YAML-files as a human read-/writeable way to specify the initial world model, but also complex object templates (e.g. complete subgraphs of PhysicalObjects together with attached Grasps and Markers, etc.). To add such templates into the world model, we developed a domain-specific module and API for higher level operations based on the raw CYPHER-access to the database.
Other more complex operations include querying the relative transformation between arbitrary objects in the graph or maintaining unique labels for nodes. This API is the basis for several adapter modules which make operations accessible via ROS services. New functionality or composite operations can be added in a modular way by writing additional adapters as necessary.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
